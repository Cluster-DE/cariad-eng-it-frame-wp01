name: "ðŸš€ dev-deployment"
run-name: 'ðŸš€ dev-deployment: "${{ github.ref_name }}"'

on:
  workflow_dispatch:

env:
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SECRET}}
  ARM_CLIENT_ID: ${{ vars.AZURE_SERVICE_PRINCIPAL_ID}}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID}}

jobs:
  terraform-apply:
    name: terraform init
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: show ARM_CLIENT_ID
        run: echo "ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}"
      - name: terraform init
        working-directory: infrastructure
        run: |
          terraform init -upgrade=true -reconfigure -input=false -backend-config="resource_group_name=${{ vars.TF_STATE_RG_NAME }}" -backend-config="storage_account_name=${{ vars.TF_STATE_STORAGE_NAME }}" -backend-config="container_name=${{ vars.TF_STATE_CONTAINER_NAME }}" -backend-config="key=dev.tfstate"
        shell: bash
      - name: terraform plan
        working-directory: infrastructure
        shell: bash
        run: |
          export exitcode=0
          terraform plan -var-file="environment/dev/dev.tfvars" -input=false -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          
          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi
      - name: terraform plan string
        working-directory: infrastructure
        shell: bash
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Check Terraform Plan" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
      - name: terraform apply
        working-directory: infrastructure
        run: |
          terraform apply -input=false -auto-approve tfplan
        shell: bash
